#!/usr/bin/env python

import argparse, os, re, sys
import eups

def linkFiles(dstDir, srcDir, verbose=0, force=False):
    """Link all the regular files in srcDir into dstDir; mkdir all the directories in srcDir and
    descend recursively"""

    if not os.path.exists(dstDir):
        os.makedirs(dstDir)

    for fileName in os.listdir(srcDir):
        fullSrc = os.path.join(srcDir, fileName)
        fullDst = os.path.join(dstDir, fileName)

        if os.path.isdir(fullSrc):
            linkFiles(fullDst, fullSrc, verbose, force)
        else:
            if verbose > 1:
                print "%s -> %s" % (fullSrc, fullDst)

            if os.path.exists(fullDst):
                if force:
                    os.unlink(fullDst)
                else:
                    print >> sys.stderr, "%s already exists; use --force to overwrite" % fullDst
                    sys.exit(1)

            os.symlink(fullSrc, fullDst)

def main():
    parser = argparse.ArgumentParser(description='Process some integers.')
    parser.add_argument('linkFarmDir', type=str, help='The directory to setup as a link farm')
    parser.add_argument('productName', type=str, help='The desired product')

    parser.add_argument('--force', '-f', action='store_true', help="Force creation of farm even if it exists")
    parser.add_argument('--verbose', '-v', action='count', help="Be chatty")
    
    args = parser.parse_args()

    linkFarmDir = os.path.abspath(args.linkFarmDir)

    if not args.force and os.path.exists(linkFarmDir):
        print >> sys.stderr, "Path %s already exists; use --force to overwrite" % args.linkFarmDir
        sys.exit(1)

    #
    # create the link farm
    #
    for d in ["include", "lib"]:
        d = os.path.join(linkFarmDir, d)
        if not os.path.exists(d):
            os.makedirs(d)

    products = {}
    for productName, versionName, optional, recursionDepth in \
            eups.getDependencies(args.productName, None, setup=True):
        if products.has_key(productName):
            continue

        products[productName] = 1

        pd = eups.productDir(productName)
        if not pd:                      # no product
            continue
        
        incDir = os.path.join(pd, "include")
        libDir = os.path.join(pd, "lib")

        if args.verbose:
            if args.verbose > 1 or os.path.exists(incDir) or os.path.exists(libDir):
                print "%-15s %s" % (productName, pd)

        if os.path.exists(incDir):
            fullDstDir = os.path.join(linkFarmDir, "include")
            linkFiles(fullDstDir, incDir, args.verbose, args.force)

        if os.path.exists(libDir):
            for src in os.listdir(libDir):
                if not re.search(r"^lib", src):
                    continue

                fullSrc = os.path.join(libDir, src)
                fullDst = os.path.join(linkFarmDir, "lib", src)
                if args.verbose > 1:
                    print src, fullSrc, fullDst
                if os.path.exists(fullDst):
                    if args.force:
                        os.unlink(fullDst)
                    else:
                        print >> sys.stderr, "%s already exists; use --force to overwrite" % fullDst
                        sys.exit(1)

                os.symlink(fullSrc, fullDst)

if __name__ == "__main__":
    main()
    
